// <auto-generated />
using System;
using EfiritPro.Retail.ProductModule.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EfiritPro.Retail.ProductModule.Persistence.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20230712103127_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.MarkingType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_marking_types");

                    b.ToTable("marking_types", (string)null);
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid")
                        .HasColumnName("client_id");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_id");

                    b.Property<string>("BarCode")
                        .HasColumnType("text")
                        .HasColumnName("bar_code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("Excise")
                        .HasColumnType("boolean")
                        .HasColumnName("excise");

                    b.Property<bool>("Hidden")
                        .HasColumnType("boolean")
                        .HasColumnName("hidden");

                    b.Property<Guid?>("MarkingTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("marking_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_type_id");

                    b.Property<decimal>("PromoPrice")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("promo_price");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("purchase_price");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("selling_price");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid")
                        .HasColumnName("unit_id");

                    b.Property<Guid>("VATId")
                        .HasColumnType("uuid")
                        .HasColumnName("vat_id");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vendor_code");

                    b.HasKey("Id", "ClientId", "OrganizationId")
                        .HasName("pk_products");

                    b.HasIndex("MarkingTypeId")
                        .HasDatabaseName("ix_products_marking_type_id");

                    b.HasIndex("ProductTypeId")
                        .HasDatabaseName("ix_products_product_type_id");

                    b.HasIndex("UnitId")
                        .HasDatabaseName("ix_products_unit_id");

                    b.HasIndex("VATId")
                        .HasDatabaseName("ix_products_vat_id");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.ProductType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_product_types");

                    b.ToTable("product_types", (string)null);
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_units");

                    b.ToTable("units", (string)null);
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.VAT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Percent")
                        .HasColumnType("integer")
                        .HasColumnName("percent");

                    b.HasKey("Id")
                        .HasName("pk_vats");

                    b.ToTable("vats", (string)null);
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.Product", b =>
                {
                    b.HasOne("EfiritPro.Retail.ProductModule.Models.MarkingType", "MarkingType")
                        .WithMany("Products")
                        .HasForeignKey("MarkingTypeId")
                        .HasConstraintName("fk_products_marking_types_marking_type_id");

                    b.HasOne("EfiritPro.Retail.ProductModule.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_product_types_product_type_id");

                    b.HasOne("EfiritPro.Retail.ProductModule.Models.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_units_unit_id");

                    b.HasOne("EfiritPro.Retail.ProductModule.Models.VAT", "VAT")
                        .WithMany("Products")
                        .HasForeignKey("VATId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_va_ts_vat_id");

                    b.Navigation("MarkingType");

                    b.Navigation("ProductType");

                    b.Navigation("Unit");

                    b.Navigation("VAT");
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.MarkingType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EfiritPro.Retail.ProductModule.Models.VAT", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
